openapi: 3.0.1
info:
  title: WEB Java course API documentation
  version: 0.0.1-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Local server
paths:
  /v1/api/products/{id}:
    get:
      tags:
      - product-controller
      summary: Get one Product by id
      operationId: getOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Product not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "200":
          description: Product received
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDto"
    put:
      tags:
      - product-controller
      summary: Update/create Product
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductForm"
        required: true
      responses:
        "400":
          description: Passed form to update is not valid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConstraintViolationProblemDetails"
        "200":
          description: Product updated
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDto"
        "201":
          description: Product created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDto"
    delete:
      tags:
      - product-controller
      summary: Delete Product by id
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: Deleted
  /v1/api/products:
    get:
      tags:
      - product-controller
      summary: Get all Products
      operationId: getAll
      responses:
        "200":
          description: Products received
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductDto"
    post:
      tags:
      - product-controller
      summary: Create new Product
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductForm"
        required: true
      responses:
        "409":
          description: Conflict in unique fields
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "201":
          description: Product created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDto"
        "400":
          description: Passed form to create is not valid
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConstraintViolationProblemDetails"
components:
  schemas:
    ProductForm:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 5
          type: string
        description:
          type: string
        price:
          maximum: 1000000
          minimum: 1
          type: number
    ConstraintViolationProblemDetails:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties:
            type: object
        fieldDetails:
          type: array
          items:
            $ref: "#/components/schemas/ParamsViolationDetails"
    ParamsViolationDetails:
      type: object
      properties:
        fieldName:
          type: string
        reason:
          type: string
    ProductDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties:
            type: object
